import{d3 as b,d as h,L as $,cs as E,r as f,K as a,d4 as P,c1 as T,O as p,o as d,c as g,e as _,Y as L,c2 as j,bY as x,a0 as k,d5 as H,d6 as O}from"./index-BiiIy8BH.js";const R={...b,maxLine:Number,lineHeight:[Number,String],tooltip:{type:[Boolean,Object],default:()=>({original:!0})}},C=h({name:"EleEllipsis",components:{EleText:$,EleTooltip:E},props:R,setup(e){const r=f(null),o=f(),n=f(""),u=a(()=>{if(!(!e.tooltip||typeof e.tooltip!="object"||e.tooltip.original!==!0))return n.value}),v=a(()=>{const t=e.tooltip&&e.tooltip!==!0?{...e.tooltip}:{};return t.content=n.value,t.virtualRef=o.value,t.virtualTriggering=!0,P(t,["original"])}),i=a(()=>!!(e.maxLine&&e.maxLine>1)),c=a(()=>Object.assign({title:u.value},T(e,H))),y=a(()=>{const l={},{lineHeight:t,maxLine:s}=e;if(t!=null){const m=typeof t=="number"?`${t}px`:t;l.lineHeight=m,i.value&&(l.height=`calc(${m} * ${s})`)}return i.value&&(l["-webkit-line-clamp"]=s),l});return{textRef:r,virtualRef:o,tooltipProps:v,multiLine:i,textProps:c,rootStyle:y,handleHover:l=>{if(!e.tooltip){o.value=void 0;return}const t=l.currentTarget;if(typeof e.tooltip=="object"&&e.tooltip.content)n.value!==e.tooltip.content&&(n.value=e.tooltip.content);else if(t){const s=O(t)?t.innerText:"";n.value!==s&&(n.value=s)}n.value&&(e.tooltip===!0||!e.tooltip.original)?o.value!==t&&(o.value=t):o.value=void 0}}}}),S=(e,r)=>{const o=e.__vccOpts||e;for(const[n,u]of r)o[n]=u;return o};function B(e,r,o,n,u,v){const i=p("EleTooltip"),c=p("EleText");return d(),g(c,x(e.textProps,{ref:"textRef",style:e.rootStyle,class:["ele-ellipsis",{"is-multi-line":e.multiLine}],onMouseover:e.handleHover}),{default:_(()=>[L(e.$slots,"default"),e.virtualRef?(d(),g(i,j(x({key:0},e.tooltipProps)),null,16)):k("",!0)]),_:3},16,["style","class","onMouseover"])}const K=S(C,[["render",B]]);export{K as i};
